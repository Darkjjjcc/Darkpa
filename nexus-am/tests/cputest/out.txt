# Building select-sort [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/select-sort-riscv32-nemu.elf
+ OBJCOPY -> build/select-sort-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/select-sort-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000e8): 00c6d663 00078593 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000e8 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000e8) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000e8

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 32[0m
# Building dummy [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/dummy-riscv32-nemu.elf
+ OBJCOPY -> build/dummy-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/dummy-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
nemu: [1;32mHIT GOOD TRAP[0m at pc = 0x80100030

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 13[0m
# Building fib [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/fib-riscv32-nemu.elf
+ OBJCOPY -> build/fib-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/fib-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x8010005c): 00e787b3 40f50533 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x8010005c is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x8010005c) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x8010005c

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building add [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/add-riscv32-nemu.elf
+ OBJCOPY -> build/add-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/add-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100080): 00a90533 40f50533 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100080 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100080) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100080

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 30[0m
# Building bubble-sort [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/bubble-sort-riscv32-nemu.elf
+ OBJCOPY -> build/bubble-sort-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/bubble-sort-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000a8): 02b75263 0007a683 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000a8 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000a8) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000a8

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 24[0m
# Building add-longlong [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/add-longlong-riscv32-nemu.elf
+ OBJCOPY -> build/add-longlong-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/add-longlong-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000a0): 00fc07b3 000ba503 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000a0 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000a0) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000a0

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 34[0m
# Building min3 [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/min3-riscv32-nemu.elf
+ OBJCOPY -> build/min3-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/min3-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100094): 012b5463 000b0913 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100094 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100094) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100094

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 31[0m
# Building wanshu [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/wanshu-riscv32-nemu.elf
+ OBJCOPY -> build/wanshu-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/wanshu-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100058): 02940c63 00100793 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100058 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100058) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100058

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 22[0m
# Building max [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/max-riscv32-nemu.elf
+ OBJCOPY -> build/max-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/max-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100080): 01255463 00090513 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100080 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100080) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100080

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 29[0m
# Building hello-str [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/hello-str-riscv32-nemu.elf
+ OBJCOPY -> build/hello-str-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/hello-str-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100010): 00050463 00008067 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100010 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100010) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100010

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 38[0m
# Building quick-sort [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/quick-sort-riscv32-nemu.elf
+ OBJCOPY -> build/quick-sort-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/quick-sort-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000cc): 06c5d463 ff010113 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000cc is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000cc) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000cc

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building div [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/div-riscv32-nemu.elf
+ OBJCOPY -> build/div-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/div-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x8010005c): fed79ae3 02848593 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x8010005c is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x8010005c) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x8010005c

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building unalign [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/unalign-riscv32-nemu.elf
+ OBJCOPY -> build/unalign-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/unalign-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x8010007c): 00344783 016401a3 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x8010007c is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x8010007c) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x8010007c

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 31[0m
# Building pascal [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/pascal-riscv32-nemu.elf
+ OBJCOPY -> build/pascal-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/pascal-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100084): 00d70633 00c7a023 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100084 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100084) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100084

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 32[0m
# Building mov-c [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/mov-c-riscv32-nemu.elf
+ OBJCOPY -> build/mov-c-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/mov-c-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100010): 00050463 00008067 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100010 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100010) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100010

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 33[0m
# Building load-store [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/load-store-riscv32-nemu.elf
+ OBJCOPY -> build/load-store-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/load-store-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x8010005c): 00041503 0009a783 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x8010005c is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x8010005c) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x8010005c

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building bit [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/bit-riscv32-nemu.elf
+ OBJCOPY -> build/bit-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/bit-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000b4): 00f11623 f71ff0ef ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000b4 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000b4) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000b4

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 15[0m
# Building matrix-mul [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/matrix-mul-riscv32-nemu.elf
+ OBJCOPY -> build/matrix-mul-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/matrix-mul-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000a0): 02c70733 00e50533 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000a0 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000a0) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000a0

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 40[0m
# Building fact [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/fact-riscv32-nemu.elf
+ OBJCOPY -> build/fact-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/fact-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100078): 40a78533 01412423 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100078 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100078) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100078

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 22[0m
# Building prime [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/prime-riscv32-nemu.elf
+ OBJCOPY -> build/prime-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/prime-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100058): 02f46733 00178793 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100058 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100058) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100058

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 22[0m
# Building sum [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/sum-riscv32-nemu.elf
+ OBJCOPY -> build/sum-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/sum-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100040): 00f70733 00e12623 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100040 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100040) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100040

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 16[0m
# Building goldbach [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/goldbach-riscv32-nemu.elf
+ OBJCOPY -> build/goldbach-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/goldbach-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100080): 06a75063 03078263 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100080 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100080) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100080

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building to-lower-case [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/to-lower-case-riscv32-nemu.elf
+ OBJCOPY -> build/to-lower-case-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/to-lower-case-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100074): 008487b3 0007c783 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100074 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100074) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100074

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 22[0m
# Building shift [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/shift-riscv32-nemu.elf
+ OBJCOPY -> build/shift-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/shift-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100070): 40f50533 00153513 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100070 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100070) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100070

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 28[0m
# Building sub-longlong [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/sub-longlong-riscv32-nemu.elf
+ OBJCOPY -> build/sub-longlong-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/sub-longlong-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x801000a0): 40ec0733 000ba503 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x801000a0 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x801000a0) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x801000a0

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 34[0m
# Building leap-year [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/leap-year-riscv32-nemu.elf
+ OBJCOPY -> build/leap-year-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/leap-year-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100094): 00079863 03446733 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100094 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100094) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100094

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 24[0m
# Building string [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/string-riscv32-nemu.elf
+ OBJCOPY -> build/string-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/string-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100010): 00050463 00008067 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100010 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100010) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100010

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 23[0m
# Building shuixianhua [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/shuixianhua-riscv32-nemu.elf
+ OBJCOPY -> build/shuixianhua-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/shuixianhua-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100074): 05340e63 032447b3 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100074 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100074) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100074

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 26[0m
# Building movsx [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/movsx-riscv32-nemu.elf
+ OBJCOPY -> build/movsx-riscv32-nemu.bin
Building riscv32-nemu
[1;34m[src/monitor/monitor.c,48,load_img] The image is /home/hust/pa/ics2019/nexus-am/tests/cputest/build/movsx-riscv32-nemu.bin[0m
[1;34m[src/memory/memory.c,16,register_pmem] Add 'pmem' at [0x80000000, 0x87ffffff][0m
[1;34m[src/monitor/monitor.c,20,welcome] Debug: [1;32mON[0m[0m
[1;34m[src/monitor/monitor.c,21,welcome] If debug mode is on, A log file will be generated to record every instruction NEMU executes. This may lead to a large log file. If it is not necessary, you can turn it off in include/common.h.[0m
[1;34m[src/monitor/monitor.c,28,welcome] Build time: 17:51:48, Sep 18 2024[0m
Welcome to [1;41m[1;33mriscv32[0m-NEMU!
For help, type "help"
invalid opcode(PC = 0x80100084): 20f98423 2089c503 ...

There are two cases which will trigger this unexpected exception:
1. The instruction at PC = 0x80100084 is not implemented.
2. Something is implemented incorrectly.
Find this PC(0x80100084) in the disassembling result to distinguish which case it is.

[1;31mIf it is the first case, see
       _                         __  __                         _ 
      (_)                       |  \/  |                       | |
  _ __ _ ___  ___ ________   __ | \  / | __ _ _ __  _   _  __ _| |
 | '__| / __|/ __|______\ \ / / | |\/| |/ _` | '_ \| | | |/ _` | |
 | |  | \__ \ (__        \ V /  | |  | | (_| | | | | |_| | (_| | |
 |_|  |_|___/\___|        \_/   |_|  |_|\__,_|_| |_|\__,_|\__,_|_|

for more details.

If it is the second case, remember:
* The machine is always right!
* Every line of untested code is always wrong![0m

nemu: [1;31mABORT[0m at pc = 0x80100084

[1;34m[src/monitor/cpu-exec.c,29,monitor_statistic] total guest instructions = 33[0m
# Building recursion [riscv32-nemu] with AM_HOME {/home/hust/pa/ics2019/nexus-am}
# Building lib-am [riscv32-nemu]
# Building lib-klib [riscv32-nemu]
# Creating binary image [riscv32-nemu]
+ LD -> build/recursion-riscv32-nemu.elf
+ OBJCOPY -> build/recursion-riscv32-nemu.bin
Building riscv32-nemu
